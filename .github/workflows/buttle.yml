name: Upload multi-platform release to Itch
on: ["workflow_dispatch"]

env:
  CARGO_BUILD: cargo build --release --bin eyes-of-hell

jobs:
  web:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Node dependencies
        run: npx pnpm i
      - name: Build webpack
        run: npm run release
      - name: Save /dist as artifact
        uses: actions/upload-artifact@v4.6.1
        with:
          name: butler-web-build
          path: dist
          retention-days: 1
  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build Windows EXE
        run: $CARGO_BUILD
      - name: Please what the hell is happening aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
        run: C:\Program Files\Git\bin\bash.exe
      - name: Save eyes-of-hell.exe as artifact
        uses: actions/upload-artifact@v4.6.1
        with:
          name: butler-windows-build
          path: target\release\eyes-of-hell.exe
          retention-days: 1
  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build Linux executable
        run: $CARGO_BUILD
      - name: Save eyes-of-hell as artifact
        uses: actions/upload-artifact@v4.6.1
        with:
          name: butler-linux-build
          path: target/release/eyes-of-hell
          retention-days: 1

  mac-x86:
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4
      - name: Build MacOS executable
        run: $CARGO_BUILD
      - name: Save eyes-of-hell as artifact
        uses: actions/upload-artifact@v4.6.1
        with:
          name: butler-mac-x86-build
          path: target/release/eyes-of-hell
          retention-days: 1
  mac-arm:
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v4
      - name: Build MacOS executable
        run: $CARGO_BUILD
      - name: Save eyes-of-hell as artifact
        uses: actions/upload-artifact@v4.6.1
        with:
          name: butler-mac-arm-build
          path: target/release/eyes-of-hell
          retention-days: 1
        
  upload-everything:
    runs-on: ubuntu-latest
    needs: ["web", "windows", "linux", "mac-x86", "mac-arm"]
    steps:
      - name: Retrieve web build as artifact
        uses: actions/download-artifact@v4
        with:
          name: butler-web-build
          path: web
          latest: true
      - name: Upload web build to itch.io
        uses: yeslayla/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.ITCH_BUTLER_CREDS }}
          ITCH_USER: unrelatedstring
          ITCH_GAME: eyes-of-hell
          PACKAGE: web
          CHANNEL: web
      - name: Retrieve Windows build as artifact
        uses: actions/download-artifact@v4
        with:
          name: butler-windows-build
          path: windows
          latest: true
      - name: Upload Windows build to itch.io
        uses: yeslayla/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.ITCH_BUTLER_CREDS }}
          ITCH_USER: unrelatedstring
          ITCH_GAME: eyes-of-hell
          PACKAGE: windows
          CHANNEL: windows
      - name: Retrieve Linux build as artifact
        uses: actions/download-artifact@v4
        with:
          name: butler-linux-build
          path: linux
          latest: true
      - name: Upload Linux build to itch.io
        uses: yeslayla/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.ITCH_BUTLER_CREDS }}
          ITCH_USER: unrelatedstring
          ITCH_GAME: eyes-of-hell
          PACKAGE: linux
          CHANNEL: linux
      - name: Retrieve MacOS (x86) build as artifact
        uses: actions/download-artifact@v4
        with:
          name: butler-mac-x86-build
          path: mac-x86
          latest: true
      - name: Upload MacOS (x86) build to itch.io
        uses: yeslayla/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.ITCH_BUTLER_CREDS }}
          ITCH_USER: unrelatedstring
          ITCH_GAME: eyes-of-hell
          PACKAGE: mac-x86
          CHANNEL: mac-x86
      - name: Retrieve MacOS (ARM) build as artifact
        uses: actions/download-artifact@v4
        with:
          name: butler-mac-arm-build
          path: mac-arm
          latest: true
      - name: Upload MacOS (ARM) build to itch.io
        uses: yeslayla/butler-publish-itchio-action@master
        env:
          BUTLER_CREDENTIALS: ${{ secrets.ITCH_BUTLER_CREDS }}
          ITCH_USER: unrelatedstring
          ITCH_GAME: eyes-of-hell
          PACKAGE: mac-arm
          CHANNEL: mac-arm
      - name: Clean up transient artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          name: butler-**
